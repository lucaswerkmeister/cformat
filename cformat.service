[Unit]
Description=Ceylon source code formatter
Requires=cformat.socket
After=cformat.socket

[Service]
ExecStart=/usr/bin/java -jar %h/.local/lib/de.lucaswerkmeister.cformat-1.3.1.jar
StandardInput=socket
StandardOutput=journal
StandardError=journal
SyslogIdentifier=cformat

# sandboxing settings
# (only those that are also available in user manager instances)

# never setuid or otherwise gain privileges
NoNewPrivileges=yes
# never fork (counts kernel threads + userspace processes, but not userspace threads)
TasksMax=1
# no 32-bit binaries on 64-bit systems or other funny syscalls for foreign architectures
SystemCallArchitectures=native
# don’t talk to the internet (or other funny address families)
RestrictAddressFamilies=AF_UNIX
# don’t hog the CPU
RestrictRealtime=yes

# the system call filter: reset the filter to empty, then each subsequent assignment adds to it
SystemCallFilter=
# read and write
SystemCallFilter=@basic-io
# @file-system (systemd commit 1a1b13c957, not in any release yet)
SystemCallFilter=open close stat stat64 fstat fstat64 lstat lstat64 creat mkdir getdents getdents64 getcwd access fcntl fcntl64 mmap munmap readlink
# event loop (is there data on the socket?)
SystemCallFilter=@io-event
# accept connections, and other operations that Java wants to perform on the provided socket (but don’t create new connections or other @network-io operations)
SystemCallFilter=accept socketpair getsockopt getsockname getpeername
# JIT code generation
SystemCallFilter=mprotect brk
# signals
SystemCallFilter=rt_sigaction rt_sigprocmask
# threads
SystemCallFilter=clone gettid futex set_robust_list set_tid_address sched_getaffinity sched_setaffinity sched_yield
# allow nio to detect platform
SystemCallFilter=uname
# not sure what these are used for
SystemCallFilter=arch_prctl sysinfo setrlimit madvise pipe
# don’t kill the process when an illegal syscall is issued, just return Operation not permitted (for example, the JVM issues some socket syscalls)
SystemCallErrorNumber=EPERM
